DEADLINE: Tuesday, 15th November, 2022.

Section A: How to submit the assignment. 

1. Create a public repository called: FE_Submission02
2. Add GitHub User Azubi01 as collaborator to this repository.
3. Write an email to submissions@azubiafrica.org with the subject FE_Submission02, Your Name. Please use the name that you used to submit your application for the position. 
For example, if you applied using the name John Doe then the subject of the email should be FE_Submission02, John Doe. 
In the body of the email send a link to the repository with your submission.


Section B: The Assignment 
Your assignment is to implement an analytics dashboard using JavaScript and no framework.

Tasks Briefing.
- Implement assignment using JavaScript do not use a framework.
- Build out the project to the designs inside the `/Designs` folder.

- Implement the following views: 
1. Login.
Login using the API at `https://freddy.codesubmit.io/login` with POST `{ username: 'freddy', password: 'ElmStreet2019' }`. The login endpoint will return a JWT `access_token` that is valid for 15 minutes and a `refresh_token` which is valid for 30 days. Make sure to also handle wrong credentials properly.

2. Dashboard.
Retrieve the necessary data for the dashboard at `https://freddy.codesubmit.io/dashboard`. This endpoint requires a`Authorization: Bearer access_token` header. Use the access token that you retrieved from Login. Keep in mind that access tokens expire after 15 minutes. You may request a fresh access token by sending a POST request to `https://freddy.codesubmit.io/refresh` with the `Authorization: Bearer refresh_token` header.

3. Implement the chart with a charting library of your choice and add a toggle that switches between a weekly and yearly view. 

4. Orders.
Fetch the orders at `https://freddy.codesubmit.io/orders?page=1&q=search_term`. This endpoint requires a `Authorization: Bearer access_token` header. Make sure to implement search and pagination 


SECTION C:  Deliverables.
Make sure to include all source code in the repository. To make reviewing easier, include a fully built version of your assignment in a folder named public. 


SECTION D: Evaluation
JavaScript best practices.
We're looking for you to produce working code, with enough room to demonstrate how to structure components in a small program. 
Show us your work through your commit history.
- Completeness: did you complete the features? 
- Correctness: does the functionality act in sensible, thought-out ways? 
- Maintainability: is it written in a clean, maintainable way? 
- Testing: is the system adequately tested? 

Please organize, design, test and document your code as if it were going into production - then push your changes to the master branch. After you have pushed your code. Follow the instructions in section A to make your submission. 

ElmStreet2019
